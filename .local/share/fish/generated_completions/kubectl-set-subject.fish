# kubectl-set-subject
# Autogenerated from man page /usr/local/share/man/man1/kubectl-set-subject.1
complete -c kubectl-set-subject -l all -d '	Select all resources, in the namespace of the specified resource types'
complete -c kubectl-set-subject -l allow-missing-template-keys -d '	If true, ignore any errors in templates when a field or map key is missing i…'
complete -c kubectl-set-subject -l dry-run -d '	Must be "none", "server", or "client"'
complete -c kubectl-set-subject -l field-manager -d '	Name of the manager used to track field ownership'
complete -c kubectl-set-subject -s f -l filename -d '	Filename, directory, or URL to files the resource to update the subjects'
complete -c kubectl-set-subject -l group -d '	Groups to bind to the role'
complete -c kubectl-set-subject -s k -l kustomize -d '	Process the kustomization directory'
complete -c kubectl-set-subject -l local -d '	If true, set subject will NOT contact api-server but run locally'
complete -c kubectl-set-subject -s o -l output -d '	Output format'
complete -c kubectl-set-subject -s R -l recursive -d '	Process the directory used in -f, --filename recursively'
complete -c kubectl-set-subject -s l -l selector -d '	Selector (label query) to filter on, supports \'=\', \'==\', and \'!=\'. (e. g'
complete -c kubectl-set-subject -l serviceaccount -d '	Service accounts to bind to the role'
complete -c kubectl-set-subject -l show-managed-fields -d '	If true, keep the managedFields when printing objects in JSON or YAML format'
complete -c kubectl-set-subject -l template -d '	Template string or path to template file to use when -o=go-template, -o=go-t…'
complete -c kubectl-set-subject -l user -d '	Usernames to bind to the role OPTIONS INHERITED FROM PARENT COMMANDS'
complete -c kubectl-set-subject -l as -d '	Username to impersonate for the operation'
complete -c kubectl-set-subject -l as-group -d '	Group to impersonate for the operation, this flag can be repeated to specify…'
complete -c kubectl-set-subject -l as-uid -d '	UID to impersonate for the operation'
complete -c kubectl-set-subject -l azure-container-registry-config -d '	Path to the file containing Azure container registry configuration informati…'
complete -c kubectl-set-subject -l cache-dir -d '	Default cache directory'
complete -c kubectl-set-subject -l certificate-authority -d '	Path to a cert file for the certificate authority'
complete -c kubectl-set-subject -l client-certificate -d '	Path to a client certificate file for TLS'
complete -c kubectl-set-subject -l client-key -d '	Path to a client key file for TLS'
complete -c kubectl-set-subject -l cluster -d '	The name of the kubeconfig cluster to use'
complete -c kubectl-set-subject -l context -d '	The name of the kubeconfig context to use'
complete -c kubectl-set-subject -l disable-compression -d '	If true, opt-out of response compression for all requests to the server'
complete -c kubectl-set-subject -l insecure-skip-tls-verify -d '	If true, the server\'s certificate will not be checked for validity'
complete -c kubectl-set-subject -l kubeconfig -d '	Path to the kubeconfig file to use for CLI requests'
complete -c kubectl-set-subject -l match-server-version -d '	Require server version to match client version'
complete -c kubectl-set-subject -s n -l namespace -d '	If present, the namespace scope for this CLI request'
complete -c kubectl-set-subject -l password -d '	Password for basic authentication to the API server'
complete -c kubectl-set-subject -l profile -d '	Name of profile to capture'
complete -c kubectl-set-subject -l profile-output -d '	Name of the file to write the profile to'
complete -c kubectl-set-subject -l request-timeout -d '	The length of time to wait before giving up on a single server request'
complete -c kubectl-set-subject -s s -l server -d '	The address and port of the Kubernetes API server'
complete -c kubectl-set-subject -l tls-server-name -d '	Server name to use for server certificate validation'
complete -c kubectl-set-subject -l token -d '	Bearer token for authentication to the API server'
complete -c kubectl-set-subject -l username -d '	Username for basic authentication to the API server'
complete -c kubectl-set-subject -l version -d '	Print version information and quit'
complete -c kubectl-set-subject -l warnings-as-errors -d '	Treat warnings received from the server as errors and exit with a non-zero e…'

