# kubectl-logs
# Autogenerated from man page /usr/local/share/man/man1/kubectl-logs.1
complete -c kubectl-logs -l all-containers -d '	Get all containers\' logs in the pod(s)'
complete -c kubectl-logs -s c -l container -d '	Print the logs of this container'
complete -c kubectl-logs -s f -l follow -d '	Specify if the logs should be streamed'
complete -c kubectl-logs -l ignore-errors -d '	If watching / following pod logs, allow for any errors that occur to be non-…'
complete -c kubectl-logs -l insecure-skip-tls-verify-backend -d '	Skip verifying the identity of the kubelet that logs are requested from'
complete -c kubectl-logs -l limit-bytes -d '	Maximum bytes of logs to return.  Defaults to no limit'
complete -c kubectl-logs -l max-log-requests -d '	Specify maximum number of concurrent logs to follow when using by a selector'
complete -c kubectl-logs -l pod-running-timeout -d '	The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at l…'
complete -c kubectl-logs -l prefix -d '	Prefix each log line with the log source (pod name and container name)'
complete -c kubectl-logs -s p -l previous -d '	If true, print the logs for the previous instance of the container in a pod …'
complete -c kubectl-logs -s l -l selector -d '	Selector (label query) to filter on, supports \'=\', \'==\', and \'!=\'. (e. g'
complete -c kubectl-logs -l since -d '	Only return logs newer than a relative duration like 5s, 2m, or 3h'
complete -c kubectl-logs -l since-time -d '	Only return logs after a specific date (RFC3339).  Defaults to all logs'
complete -c kubectl-logs -l tail -s 1 -d '	Lines of recent log file to display'
complete -c kubectl-logs -l timestamps -d '	Include timestamps on each line in the log output OPTIONS INHERITED FROM PAR…'
complete -c kubectl-logs -l as -d '	Username to impersonate for the operation'
complete -c kubectl-logs -l as-group -d '	Group to impersonate for the operation, this flag can be repeated to specify…'
complete -c kubectl-logs -l as-uid -d '	UID to impersonate for the operation'
complete -c kubectl-logs -l azure-container-registry-config -d '	Path to the file containing Azure container registry configuration informati…'
complete -c kubectl-logs -l cache-dir -d '	Default cache directory'
complete -c kubectl-logs -l certificate-authority -d '	Path to a cert file for the certificate authority'
complete -c kubectl-logs -l client-certificate -d '	Path to a client certificate file for TLS'
complete -c kubectl-logs -l client-key -d '	Path to a client key file for TLS'
complete -c kubectl-logs -l cluster -d '	The name of the kubeconfig cluster to use'
complete -c kubectl-logs -l context -d '	The name of the kubeconfig context to use'
complete -c kubectl-logs -l disable-compression -d '	If true, opt-out of response compression for all requests to the server'
complete -c kubectl-logs -l insecure-skip-tls-verify -d '	If true, the server\'s certificate will not be checked for validity'
complete -c kubectl-logs -l kubeconfig -d '	Path to the kubeconfig file to use for CLI requests'
complete -c kubectl-logs -l match-server-version -d '	Require server version to match client version'
complete -c kubectl-logs -s n -l namespace -d '	If present, the namespace scope for this CLI request'
complete -c kubectl-logs -l password -d '	Password for basic authentication to the API server'
complete -c kubectl-logs -l profile -d '	Name of profile to capture'
complete -c kubectl-logs -l profile-output -d '	Name of the file to write the profile to'
complete -c kubectl-logs -l request-timeout -d '	The length of time to wait before giving up on a single server request'
complete -c kubectl-logs -s s -l server -d '	The address and port of the Kubernetes API server'
complete -c kubectl-logs -l tls-server-name -d '	Server name to use for server certificate validation'
complete -c kubectl-logs -l token -d '	Bearer token for authentication to the API server'
complete -c kubectl-logs -l user -d '	The name of the kubeconfig user to use'
complete -c kubectl-logs -l username -d '	Username for basic authentication to the API server'
complete -c kubectl-logs -l version -d '	Print version information and quit'
complete -c kubectl-logs -l warnings-as-errors -d '	Treat warnings received from the server as errors and exit with a non-zero e…'

