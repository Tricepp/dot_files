# kubectl-config-set-cluster
# Autogenerated from man page /usr/local/share/man/man1/kubectl-config-set-cluster.1
complete -c kubectl-config-set-cluster -l certificate-authority -d '	Path to certificate-authority file for the cluster entry in kubeconfig'
complete -c kubectl-config-set-cluster -l embed-certs -d '	embed-certs for the cluster entry in kubeconfig'
complete -c kubectl-config-set-cluster -l insecure-skip-tls-verify -d '	insecure-skip-tls-verify for the cluster entry in kubeconfig'
complete -c kubectl-config-set-cluster -l proxy-url -d '	proxy-url for the cluster entry in kubeconfig'
complete -c kubectl-config-set-cluster -l server -d '	server for the cluster entry in kubeconfig'
complete -c kubectl-config-set-cluster -l tls-server-name -d '	tls-server-name for the cluster entry in kubeconfig OPTIONS INHERITED FROM P…'
complete -c kubectl-config-set-cluster -l as -d '	Username to impersonate for the operation'
complete -c kubectl-config-set-cluster -l as-group -d '	Group to impersonate for the operation, this flag can be repeated to specify…'
complete -c kubectl-config-set-cluster -l as-uid -d '	UID to impersonate for the operation'
complete -c kubectl-config-set-cluster -l azure-container-registry-config -d '	Path to the file containing Azure container registry configuration informati…'
complete -c kubectl-config-set-cluster -l cache-dir -d '	Default cache directory'
complete -c kubectl-config-set-cluster -l client-certificate -d '	Path to a client certificate file for TLS'
complete -c kubectl-config-set-cluster -l client-key -d '	Path to a client key file for TLS'
complete -c kubectl-config-set-cluster -l cluster -d '	The name of the kubeconfig cluster to use'
complete -c kubectl-config-set-cluster -l context -d '	The name of the kubeconfig context to use'
complete -c kubectl-config-set-cluster -l disable-compression -d '	If true, opt-out of response compression for all requests to the server'
complete -c kubectl-config-set-cluster -l kubeconfig -d '	use a particular kubeconfig file'
complete -c kubectl-config-set-cluster -l match-server-version -d '	Require server version to match client version'
complete -c kubectl-config-set-cluster -s n -l namespace -d '	If present, the namespace scope for this CLI request'
complete -c kubectl-config-set-cluster -l password -d '	Password for basic authentication to the API server'
complete -c kubectl-config-set-cluster -l profile -d '	Name of profile to capture'
complete -c kubectl-config-set-cluster -l profile-output -d '	Name of the file to write the profile to'
complete -c kubectl-config-set-cluster -l request-timeout -d '	The length of time to wait before giving up on a single server request'
complete -c kubectl-config-set-cluster -l token -d '	Bearer token for authentication to the API server'
complete -c kubectl-config-set-cluster -l user -d '	The name of the kubeconfig user to use'
complete -c kubectl-config-set-cluster -l username -d '	Username for basic authentication to the API server'
complete -c kubectl-config-set-cluster -l version -d '	Print version information and quit'
complete -c kubectl-config-set-cluster -l warnings-as-errors -d '	Treat warnings received from the server as errors and exit with a non-zero e…'

