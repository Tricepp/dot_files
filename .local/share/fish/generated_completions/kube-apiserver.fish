# kube-apiserver
# Autogenerated from man page /usr/local/share/man/man1/kube-apiserver.1
complete -c kube-apiserver -l admission-control -d '	Admission is divided into two phases'
complete -c kube-apiserver -l admission-control-config-file -d '	File with admission control configuration'
complete -c kube-apiserver -l advertise-address -d '	The IP address on which to advertise the apiserver to members of the cluster'
complete -c kube-apiserver -l aggregator-reject-forwarding-redirect -d '	Aggregator reject forwarding redirect response back to client'
complete -c kube-apiserver -l allow-metric-labels -d '	The map from metric-label to value allow-list of this label'
complete -c kube-apiserver -l allow-privileged -d '	If true, allow privileged containers.  [default=false]'
complete -c kube-apiserver -l anonymous-auth -d '	Enables anonymous requests to the secure port of the API server'
complete -c kube-apiserver -l api-audiences -d '	Identifiers of the API'
complete -c kube-apiserver -l apiserver-count -d '	The number of apiservers running in the cluster, must be a positive number'
complete -c kube-apiserver -l audit-log-batch-buffer-size -d '	The size of the buffer to store events before batching and writing'
complete -c kube-apiserver -l audit-log-batch-max-size -d '	The maximum size of a batch.  Only used in batch mode'
complete -c kube-apiserver -l audit-log-batch-max-wait -d '	The amount of time to wait before force writing the batch that hadn\'t reache…'
complete -c kube-apiserver -l audit-log-batch-throttle-burst -d '	Maximum number of requests sent at the same moment if ThrottleQPS was not ut…'
complete -c kube-apiserver -l audit-log-batch-throttle-enable -d '	Whether batching throttling is enabled.  Only used in batch mode'
complete -c kube-apiserver -l audit-log-batch-throttle-qps -d '	Maximum average number of batches per second.  Only used in batch mode'
complete -c kube-apiserver -l audit-log-compress -d '	If set, the rotated log files will be compressed using gzip'
complete -c kube-apiserver -l audit-log-format -d '	Format of saved audits'
complete -c kube-apiserver -l audit-log-maxage -d '	The maximum number of days to retain old audit log files based on the timest…'
complete -c kube-apiserver -l audit-log-maxbackup -d '	The maximum number of old audit log files to retain'
complete -c kube-apiserver -l audit-log-maxsize -d '	The maximum size in megabytes of the audit log file before it gets rotated'
complete -c kube-apiserver -l audit-log-mode -d '	Strategy for sending audit events'
complete -c kube-apiserver -l audit-log-path -d '	If set, all requests coming to the apiserver will be logged to this file'
complete -c kube-apiserver -l audit-log-truncate-enabled -d '	Whether event and batch truncating is enabled'
complete -c kube-apiserver -l audit-log-truncate-max-batch-size -d '	Maximum size of the batch sent to the underlying backend'
complete -c kube-apiserver -l audit-log-truncate-max-event-size -d '	Maximum size of the audit event sent to the underlying backend'
complete -c kube-apiserver -l audit-log-version -d '	API group and version used for serializing audit events written to log'
complete -c kube-apiserver -l audit-policy-file -d '	Path to the file that defines the audit policy configuration'
complete -c kube-apiserver -l audit-webhook-batch-buffer-size -d '	The size of the buffer to store events before batching and writing'
complete -c kube-apiserver -l audit-webhook-batch-initial-backoff -d '	The amount of time to wait before retrying the first failed request'
complete -c kube-apiserver -l audit-webhook-batch-max-size -d '	The maximum size of a batch.  Only used in batch mode'
complete -c kube-apiserver -l audit-webhook-batch-max-wait -d '	The amount of time to wait before force writing the batch that hadn\'t reache…'
complete -c kube-apiserver -l audit-webhook-batch-throttle-burst -d '	Maximum number of requests sent at the same moment if ThrottleQPS was not ut…'
complete -c kube-apiserver -l audit-webhook-batch-throttle-enable -d '	Whether batching throttling is enabled.  Only used in batch mode'
complete -c kube-apiserver -l audit-webhook-batch-throttle-qps -d '	Maximum average number of batches per second.  Only used in batch mode'
complete -c kube-apiserver -l audit-webhook-config-file -d '	Path to a kubeconfig formatted file that defines the audit webhook configura…'
complete -c kube-apiserver -l audit-webhook-initial-backoff -d '	The amount of time to wait before retrying the first failed request'
complete -c kube-apiserver -l audit-webhook-mode -d '	Strategy for sending audit events'
complete -c kube-apiserver -l audit-webhook-truncate-enabled -d '	Whether event and batch truncating is enabled'
complete -c kube-apiserver -l audit-webhook-truncate-max-batch-size -d '	Maximum size of the batch sent to the underlying backend'
complete -c kube-apiserver -l audit-webhook-truncate-max-event-size -d '	Maximum size of the audit event sent to the underlying backend'
complete -c kube-apiserver -l audit-webhook-version -d '	API group and version used for serializing audit events written to webhook'
complete -c kube-apiserver -l authentication-token-webhook-cache-ttl -d '	The duration to cache responses from the webhook token authenticator'
complete -c kube-apiserver -l authentication-token-webhook-config-file -d '	File with webhook configuration for token authentication in kubeconfig format'
complete -c kube-apiserver -l authentication-token-webhook-version -d '	The API version of the authentication. k8s'
complete -c kube-apiserver -l authorization-mode -d '	Ordered list of plug-ins to do authorization on secure port'
complete -c kube-apiserver -l authorization-policy-file -d '	File with authorization policy in json line by line format, used with --auth…'
complete -c kube-apiserver -l authorization-webhook-cache-authorized-ttl -d '	The duration to cache \'authorized\' responses from the webhook authorizer'
complete -c kube-apiserver -l authorization-webhook-cache-unauthorized-ttl -d '	The duration to cache \'unauthorized\' responses from the webhook authorizer'
complete -c kube-apiserver -l authorization-webhook-config-file -d '	File with webhook configuration in kubeconfig format, used with --authorizat…'
complete -c kube-apiserver -l authorization-webhook-version -d '	The API version of the authorization. k8s'
complete -c kube-apiserver -l azure-container-registry-config -d '	Path to the file containing Azure container registry configuration informati…'
complete -c kube-apiserver -l bind-address -d '	The IP address on which to listen for the --secure-port port'
complete -c kube-apiserver -l cert-dir -d '	The directory where the TLS certs are located'
complete -c kube-apiserver -l client-ca-file -d '	If set, any request presenting a client certificate signed by one of the aut…'
complete -c kube-apiserver -l cloud-config -d '	The path to the cloud provider configuration file'
complete -c kube-apiserver -l cloud-provider -d '	The provider for cloud services.  Empty string for no provider'
complete -c kube-apiserver -l cloud-provider-gce-l7lb-src-cidrs -d '	CIDRs opened in GCE firewall for L7 LB traffic proxy & health checks'
complete -c kube-apiserver -l cloud-provider-gce-lb-src-cidrs -d '	CIDRs opened in GCE firewall for L4 LB traffic proxy & health checks'
complete -c kube-apiserver -l contention-profiling -d '	Enable lock contention profiling, if profiling is enabled'
complete -c kube-apiserver -l cors-allowed-origins -d '	List of allowed origins for CORS, comma separated'
complete -c kube-apiserver -l default-not-ready-toleration-seconds -d '	Indicates the tolerationSeconds of the toleration for notReady:NoExecute tha…'
complete -c kube-apiserver -l default-unreachable-toleration-seconds -d '	Indicates the tolerationSeconds of the toleration for unreachable:NoExecute …'
complete -c kube-apiserver -l default-watch-cache-size -d '	Default watch cache size'
complete -c kube-apiserver -l delete-collection-workers -d '	Number of workers spawned for DeleteCollection call'
complete -c kube-apiserver -l disable-admission-plugins -d '	admission plugins that should be disabled although they are in the default e…'
complete -c kube-apiserver -l disabled-metrics -d '	This flag provides an escape hatch for misbehaving metrics'
complete -c kube-apiserver -l egress-selector-config-file -d '	File with apiserver egress selector configuration'
complete -c kube-apiserver -l enable-admission-plugins -d '	admission plugins that should be enabled in addition to default enabled ones…'
complete -c kube-apiserver -l enable-aggregator-routing -d '	Turns on aggregator routing requests to endpoints IP rather than cluster IP'
complete -c kube-apiserver -l enable-bootstrap-token-auth -d '	Enable to allow secrets of type \'bootstrap. kubernetes'
complete -c kube-apiserver -l enable-garbage-collector -d '	Enables the generic garbage collector'
complete -c kube-apiserver -l enable-logs-handler -d '	If true, install a /logs handler for the apiserver logs'
complete -c kube-apiserver -l enable-priority-and-fairness -d '	If true and the APIPriorityAndFairness feature gate is enabled, replace the …'
complete -c kube-apiserver -l encryption-provider-config -d '	The file containing configuration for encryption providers to be used for st…'
complete -c kube-apiserver -l encryption-provider-config-automatic-reload -d '	Determines if the file set by --encryption-provider-config should be automat…'
complete -c kube-apiserver -l endpoint-reconciler-type -d '	Use an endpoint reconciler (master-count, lease, none) master-count is depre…'
complete -c kube-apiserver -l etcd-cafile -d '	SSL Certificate Authority file used to secure etcd communication'
complete -c kube-apiserver -l etcd-certfile -d '	SSL certification file used to secure etcd communication'
complete -c kube-apiserver -l etcd-compaction-interval -d '	The interval of compaction requests'
complete -c kube-apiserver -l etcd-count-metric-poll-period -d '	Frequency of polling etcd for number of resources per type'
complete -c kube-apiserver -l etcd-db-metric-poll-interval -d '	The interval of requests to poll etcd and update metric'
complete -c kube-apiserver -l etcd-healthcheck-timeout -d '	The timeout to use when checking etcd health'
complete -c kube-apiserver -l etcd-keyfile -d '	SSL key file used to secure etcd communication'
complete -c kube-apiserver -l etcd-prefix -d '	The prefix to prepend to all resource paths in etcd'
complete -c kube-apiserver -l etcd-readycheck-timeout -d '	The timeout to use when checking etcd readiness'
complete -c kube-apiserver -l etcd-servers -d '	List of etcd servers to connect with (scheme://ip:port), comma separated'
complete -c kube-apiserver -l etcd-servers-overrides -d '	Per-resource etcd servers overrides, comma separated'
complete -c kube-apiserver -l event-ttl -d '	Amount of time to retain events'
complete -c kube-apiserver -l external-hostname -d '	The hostname to use when generating externalized URLs for this master (e. g'
complete -c kube-apiserver -l feature-gates -d '	A set of key=value pairs that describe feature gates for alpha/experimental …'
complete -c kube-apiserver -l goaway-chance -d '	To prevent HTTP/2 clients from getting stuck on a single apiserver, randomly…'
complete -c kube-apiserver -s h -l help -d '	help for kube-apiserver'
complete -c kube-apiserver -l http2-max-streams-per-connection -d '	The limit that the server gives to clients for the maximum number of streams…'
complete -c kube-apiserver -l kubelet-certificate-authority -d '	Path to a cert file for the certificate authority'
complete -c kube-apiserver -l kubelet-client-certificate -d '	Path to a client cert file for TLS'
complete -c kube-apiserver -l kubelet-client-key -d '	Path to a client key file for TLS'
complete -c kube-apiserver -l kubelet-port -d '	DEPRECATED: kubelet port'
complete -c kube-apiserver -l kubelet-preferred-address-types -d '	List of the preferred NodeAddressTypes to use for kubelet connections'
complete -c kube-apiserver -l kubelet-read-only-port -d '	DEPRECATED: kubelet read only port'
complete -c kube-apiserver -l kubelet-timeout -d '	Timeout for kubelet operations'
complete -c kube-apiserver -l kubernetes-service-node-port -d '	If non-zero, the Kubernetes master service (which apiserver creates/maintain…'
complete -c kube-apiserver -l lease-reuse-duration-seconds -d '	The time in seconds that each lease is reused'
complete -c kube-apiserver -l livez-grace-period -d '	This option represents the maximum amount of time it should take for apiserv…'
complete -c kube-apiserver -l log-flush-frequency -d '	Maximum number of seconds between log flushes'
complete -c kube-apiserver -l logging-format -d '	Sets the log format.  Permitted formats: "text"'
complete -c kube-apiserver -l master-service-namespace -d '	DEPRECATED: the namespace from which the Kubernetes master services should b…'
complete -c kube-apiserver -l max-connection-bytes-per-sec -d '	If non-zero, throttle each user connection to this number of bytes/sec'
complete -c kube-apiserver -l max-mutating-requests-inflight -d '	This and --max-requests-inflight are summed to determine the server\'s total …'
complete -c kube-apiserver -l max-requests-inflight -d '	This and --max-mutating-requests-inflight are summed to determine the server…'
complete -c kube-apiserver -l min-request-timeout -d '	An optional field indicating the minimum number of seconds a handler must ke…'
complete -c kube-apiserver -l oidc-ca-file -d '	If set, the OpenID server\'s certificate will be verified by one of the autho…'
complete -c kube-apiserver -l oidc-client-id -d '	The client ID for the OpenID Connect client, must be set if oidc-issuer-url …'
complete -c kube-apiserver -l oidc-groups-claim -d '	If provided, the name of a custom OpenID Connect claim for specifying user g…'
complete -c kube-apiserver -l oidc-groups-prefix -d '	If provided, all groups will be prefixed with this value to prevent conflict…'
complete -c kube-apiserver -l oidc-issuer-url -d '	The URL of the OpenID issuer, only HTTPS scheme will be accepted'
complete -c kube-apiserver -l oidc-required-claim -d '	A key=value pair that describes a required claim in the ID Token'
complete -c kube-apiserver -l oidc-signing-algs -d '	Comma-separated list of allowed JOSE asymmetric signing algorithms'
complete -c kube-apiserver -l oidc-username-claim -d '	The OpenID claim to use as the user name'
complete -c kube-apiserver -l oidc-username-prefix -d '	If provided, all usernames will be prefixed with this value'
complete -c kube-apiserver -l permit-address-sharing -d '	If true, SO_REUSEADDR will be used when binding the port'
complete -c kube-apiserver -l permit-port-sharing -d '	If true, SO_REUSEPORT will be used when binding the port, which allows more …'
complete -c kube-apiserver -l profiling -d '	Enable profiling via web interface host:port/debug/pprof/'
complete -c kube-apiserver -l proxy-client-cert-file -d '	Client certificate used to prove the identity of the aggregator or kube-apis…'
complete -c kube-apiserver -l proxy-client-key-file -d '	Private key for the client certificate used to prove the identity of the agg…'
complete -c kube-apiserver -l request-timeout -d '	An optional field indicating the duration a handler must keep a request open…'
complete -c kube-apiserver -l requestheader-allowed-names -d '	List of client certificate common names to allow to provide usernames in hea…'
complete -c kube-apiserver -l requestheader-client-ca-file -d '	Root certificate bundle to use to verify client certificates on incoming req…'
complete -c kube-apiserver -l requestheader-extra-headers-prefix -d '	List of request header prefixes to inspect.  X-Remote-Extra- is suggested'
complete -c kube-apiserver -l requestheader-group-headers -d '	List of request headers to inspect for groups.  X-Remote-Group is suggested'
complete -c kube-apiserver -l requestheader-username-headers -d '	List of request headers to inspect for usernames.  X-Remote-User is common'
complete -c kube-apiserver -l runtime-config -d '	A set of key=value pairs that enable or disable built-in APIs'
complete -c kube-apiserver -l secure-port -d '	The port on which to serve HTTPS with authentication and authorization'
complete -c kube-apiserver -l service-account-extend-token-expiration -d '	Turns on projected service account expiration extension during token generat…'
complete -c kube-apiserver -l service-account-issuer -d '	Identifier of the service account token issuer'
complete -c kube-apiserver -l service-account-jwks-uri -d '	Overrides the URI for the JSON Web Key Set in the discovery doc served at /'
complete -c kube-apiserver -l service-account-key-file -d '	File containing PEM-encoded x509 RSA or ECDSA private or public keys, used t…'
complete -c kube-apiserver -l service-account-lookup -d '	If true, validate ServiceAccount tokens exist in etcd as part of authenticat…'
complete -c kube-apiserver -l service-account-max-token-expiration -d '	The maximum validity duration of a token created by the service account toke…'
complete -c kube-apiserver -l service-account-signing-key-file -d '	Path to the file that contains the current private key of the service accoun…'
complete -c kube-apiserver -l service-cluster-ip-range -d '	A CIDR notation IP range from which to assign service cluster IPs'
complete -c kube-apiserver -l service-node-port-range -d '	A port range to reserve for services with NodePort visibility'
complete -c kube-apiserver -l show-hidden-metrics-for-version -d '	The previous version for which you want to show hidden metrics'
complete -c kube-apiserver -l shutdown-delay-duration -d '	Time to delay the termination'
complete -c kube-apiserver -l shutdown-send-retry-after -d '	If true the HTTP Server will continue listening until all non long running r…'
complete -c kube-apiserver -l storage-backend -d '	The storage backend for persistence.  Options: \'etcd3\' (default)'
complete -c kube-apiserver -l storage-media-type -d '	The media type to use to store objects in storage'
complete -c kube-apiserver -l strict-transport-security-directives -d '	List of directives for HSTS, comma separated'
complete -c kube-apiserver -l tls-cert-file -d '	File containing the default x509 Certificate for HTTPS'
complete -c kube-apiserver -l tls-cipher-suites -d '	Comma-separated list of cipher suites for the server'
complete -c kube-apiserver -l tls-min-version -d '	Minimum TLS version supported'
complete -c kube-apiserver -l tls-private-key-file -d '	File containing the default x509 private key matching --tls-cert-file'
complete -c kube-apiserver -l tls-sni-cert-key -d '	A pair of x509 certificate and private key file paths, optionally suffixed w…'
complete -c kube-apiserver -l token-auth-file -d '	If set, the file that will be used to secure the secure port of the API serv…'
complete -c kube-apiserver -l tracing-config-file -d '	File with apiserver tracing configuration'
complete -c kube-apiserver -s v -l v -d '	number for the log level verbosity'
complete -c kube-apiserver -l version -d '	Print version information and quit'
complete -c kube-apiserver -l vmodule -d '	comma-separated list of pattern=N settings for file-filtered logging (only w…'
complete -c kube-apiserver -l watch-cache -d '	Enable watch caching in the apiserver'
complete -c kube-apiserver -l watch-cache-sizes -d '	Watch cache size settings for some resources (pods, nodes, etc'

